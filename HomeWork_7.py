'''
Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме:
название, форма собственности, выручка, издержки.

Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями,
а также словарь со средней прибылью. Если фирма получила убытки, также добавить ее в словарь (со значением убытков).

Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.

Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

Подсказка: использовать менеджеры контекста.
'''

import codecs
import json

total = 0  # Переменная для расчета общей прибыли
i = 0  # Переменная для счетчика фирм с положительным балансом
with codecs.open('file_7.txt', 'r', 'utf-8') as f:  # Открываем файл на чтение
    my_str = f.readlines()  # Выводим список строк из файла
    my_str = [line.rstrip() for line in my_str]  # Генератор нового списка строк без символов переноса строки '\r\n'
    data = {itm.split(' ')[0]: int(itm.split(' ')[2]) - int(itm.split(' ')[3]) for itm in
            my_str}  # Словарь фирма - прибыль
    for values in data.values():  # Считаем среднюю прибыль
        if values >= 0:  # Условие исключения фирмы с отрицательным балансом из расчета
            total += values
            i += 1
    av_prof_dict = {'average_profit': round((total / i), 2)}  # Словарь со средней прибилью
new_list = [data, av_prof_dict]  # Итоговый список со словарями
print(new_list)

with open('file_7.json', 'w', encoding='utf-8') as f:  # Сохраняем итоговый список в виде json-объекта
    json.dump(new_list, f)
